from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardButton
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton


def choice_start() -> ReplyKeyboardMarkup:
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text='–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ ‚öô'),
                KeyboardButton(text='–ö–æ–Ω—Ç—Ä–æ–ª—å —Ç–∞—Å–∫–æ–≤ üìã')
            ]
        ], resize_keyboard=True)
    return keyboard


def choice_engines_status() -> ReplyKeyboardMarkup:
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text='Engine –∏–∑ QMS ‚öô'),
                KeyboardButton(text='–°–æ—Å—Ç–æ—è–Ω–∏–µ CPU/RAM üìà')
            ],
            [
                KeyboardButton(text='–ù–∞–∑–∞–¥ üîô')
            ]
        ], resize_keyboard=True)
    return keyboard


def choice_type_tasks() -> ReplyKeyboardMarkup:
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text='Manually üîß'),
                KeyboardButton(text='Scheduler ‚è≥')
            ],
            [
                KeyboardButton(text='–ù–∞–∑–∞–¥ üîô')
            ]
        ], resize_keyboard=True)
    return keyboard


def choice_status_task() -> ReplyKeyboardMarkup:
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text='Started üîÅ'),
                KeyboardButton(text='Aborted ‚ùé')
            ],
            [
                KeyboardButton(text='Failed ‚ùå'),
                KeyboardButton(text='Success ‚úî')
            ],
            [
                KeyboardButton(text='–ù–∞–∑–∞–¥ ‚è™')
            ]
        ], resize_keyboard=True)
    return keyboard


def choice_engine() -> InlineKeyboardBuilder:
    builder = InlineKeyboardBuilder()
    buttons = [
        InlineKeyboardButton(text=f"qlik01 (ttk)", callback_data=f"qlik01 1"),  # 1 - —á–∞—Å, –∑–∞ –∫–æ—Ç–æ—Ä—ã–π –±–µ—Ä—É—Ç—Å—è –¥–∞–Ω–Ω—ã–µ
        InlineKeyboardButton(text=f"qlik02 (dev)", callback_data=f"qlik02 1"),
        InlineKeyboardButton(text=f"qlik03 (pl)", callback_data=f"qlik03 1")
    ]

    builder.row(*buttons, width=1)
    return builder


def choice_another_interval(callback) -> InlineKeyboardBuilder:
    builder = InlineKeyboardBuilder()
    buttons = [  # f"{callback.split()[0]} 4"  - –∑–∞–º–µ–Ω–∞ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–ª–±—ç–∫–∞, Example: qlik01 1 -> qlik01 4
        InlineKeyboardButton(text=f"4Ô∏è‚É£ —á–∞—Å–∞", callback_data=f"{callback.split()[0]} 4"),  # 4 - —á–∞—Å–∞, –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ –±–µ—Ä—É—Ç—Å—è –¥–∞–Ω–Ω—ã–µ
        InlineKeyboardButton(text=f"1Ô∏è‚É£2Ô∏è‚É£ —á–∞—Å–æ–≤", callback_data=f"{callback.split()[0]} 12"),
        InlineKeyboardButton(text=f"2Ô∏è‚É£4Ô∏è‚É£ —á–∞—Å–∞", callback_data=f"{callback.split()[0]} 24"),
        InlineKeyboardButton(text=f"–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ üßπ", callback_data=f"back_engines")
    ]

    builder.row(*buttons, width=1)
    return builder